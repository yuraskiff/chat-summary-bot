# --- START OF FILE api_clients/openrouter.py ---

import httpx
import logging
import textwrap
from typing import List, Optional, Dict # –î–æ–±–∞–≤–∏–ª–∏ —Ç–∏–ø–∏–∑–∞—Ü–∏—é
from config.config import OPENROUTER_API_KEY

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
# –ú–æ–¥–µ–ª—å –º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ config.py –∏–ª–∏ .env –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏
# MODEL = "openai/gpt-3.5-turbo" # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –º–æ–¥–µ–ª—å –¥–ª—è –Ω–∞—á–∞–ª–∞
MODEL = "deepseek/deepseek-chat-v3-0324:free" # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ DeepSeek
API_URL = "https://openrouter.ai/api/v1/chat/completions"
# –¢–∞–π–º–∞—É—Ç—ã: 10—Å –Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, 60—Å –Ω–∞ —á—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
TIMEOUT = httpx.Timeout(10.0, read=60.0)

HEADERS = {
    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
    # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    "HTTP-Referer": "https://chat-summary-bot.onrender.com", # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤—å—Ç–µ
    "X-Title": "Chat Summary Bot",
    "Content-Type": "application/json",
}

# –ü—Ä–∏–º–µ—Ä–Ω—ã–π –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–¥–µ–ª–∏ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–æ–¥–µ–ª–∏)
# –õ—É—á—à–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ç–æ–∫–µ–Ω—ã, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª—ã
CONTEXT_MAX_LENGTH = 8000 # –î–ª—è gpt-3.5-turbo –º–æ–∂–Ω–æ –∏ –±–æ–ª—å—à–µ, –¥–ª—è free –º–æ–¥–µ–ª–µ–π - –º–µ–Ω—å—à–µ

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å–≤–æ–¥–∫–∏ ---
async def summarize_chat(
    chat_history_blocks: List[str],
    system_prompt: Optional[str] = None,
    user_prompt: Optional[str] = None
) -> Optional[str]:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –∏ –ø—Ä–æ–º–ø—Ç—ã –Ω–∞ –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ OpenRouter API.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–≤–æ–¥–∫–∏ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ.

    :param chat_history_blocks: –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ - —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞.
    :param system_prompt: –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    :param user_prompt: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–¥–∞—á–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π).
    :return: –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ –∏–ª–∏ None.
    """
    if not OPENROUTER_API_KEY:
        logging.error("–ö–ª—é—á API OpenRouter (OPENROUTER_API_KEY) –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return None

    # --- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ ---
    final_system_prompt = system_prompt or "–¢—ã ‚Äî –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –∏ –∫—Ä–∞—Ç–∫–æ–º –∏–∑–ª–æ–∂–µ–Ω–∏–∏ (summary) –ø–µ—Ä–µ–ø–∏—Å–æ–∫ –≤ —á–∞—Ç–∞—Ö."

    default_user_prompt = textwrap.dedent("""
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞.
        –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É (summary), –≤–∫–ª—é—á–∞—é—â—É—é:
        - –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –æ–±—Å—É–∂–¥–µ–Ω–∏—è.
        - –ö–ª—é—á–µ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–ª–∏ –≤—ã–≤–æ–¥—ã (–µ—Å–ª–∏ –±—ã–ª–∏).
        - –ù–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏.
        - –û–±—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–ª–∏ —Ç–æ–Ω –¥–∏—Å–∫—É—Å—Å–∏–∏.
        –û—Ç–≤–µ—Ç –¥–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ù–µ –≤–∫–ª—é—á–∞–π –≤ –æ—Ç–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏–ª–∏ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã, —Ç–æ–ª—å–∫–æ —Å–∞–º—É —Å–≤–æ–¥–∫—É.
    """).strip()
    final_user_prompt = user_prompt or default_user_prompt

    # --- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (—Å –æ–±—Ä–µ–∑–∫–æ–π) ---
    trimmed_history = ""
    current_length = 0
    # –°–æ–±–∏—Ä–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å –∫–æ–Ω—Ü–∞ (—Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∞–∂–Ω–µ–µ)
    for block in reversed(chat_history_blocks):
        block_len = len(block) + 1 # +1 –∑–∞ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏
        if current_length + block_len <= CONTEXT_MAX_LENGTH:
            trimmed_history = block + "\n" + trimmed_history
            current_length += block_len
        else:
            # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–ª–æ–∫–∞ –ø—Ä–µ–≤—ã—Å–∏—Ç –ª–∏–º–∏—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            logging.warning(f"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ–±—Ä–µ–∑–∞–Ω–∞ –¥–æ {current_length} —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑-–∑–∞ –ª–∏–º–∏—Ç–∞ ({CONTEXT_MAX_LENGTH}).")
            break

    if not trimmed_history:
        logging.warning("–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ OpenAI –ø—É—Å—Ç–∞.")
        return None

    # --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ API ---
    messages = [
        {"role": "system", "content": final_system_prompt},
        # –°–Ω–∞—á–∞–ª–∞ –¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        {"role": "user", "content": final_user_prompt},
        # –ü–æ—Ç–æ–º —Å–∞–º—É –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # (–º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å, –Ω–æ —Ç–∞–∫ –ø—Ä–æ—â–µ –¥–ª—è –º–Ω–æ–≥–∏—Ö –º–æ–¥–µ–ª–µ–π)
        {"role": "user", "content": "–í–æ—Ç –∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:\n\n" + trimmed_history.strip()}
    ]

    request_payload = {
        "model": MODEL,
        "messages": messages,
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, temperature
        # "temperature": 0.7,
    }

    # --- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ ---
    logging.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenRouter (–º–æ–¥–µ–ª—å: {MODEL}, —Å–∏–º–≤–æ–ª–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏: {current_length})")
    try:
        async with httpx.AsyncClient(timeout=TIMEOUT) as client:
            response = await client.post(API_URL, headers=HEADERS, json=request_payload)

            # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞
            logging.info(f"–û—Ç–≤–µ—Ç –æ—Ç OpenRouter –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å: {response.status_code}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ HTTP
            response.raise_for_status()

            data = response.json()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –æ–∂–∏–¥–∞–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
            if "choices" in data and data["choices"] and "message" in data["choices"][0] and "content" in data["choices"][0]["message"]:
                summary_text = data["choices"][0]["message"]["content"].strip()
                logging.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å–≤–æ–¥–∫–∞ –æ—Ç –º–æ–¥–µ–ª–∏ (–¥–ª–∏–Ω–∞: {len(summary_text)} —Å–∏–º–≤–æ–ª–æ–≤).")
                # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                logging.debug(f"–ù–∞—á–∞–ª–æ —Å–≤–æ–¥–∫–∏: '{summary_text[:100]}...'")
                return summary_text
            else:
                logging.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenRouter: {data}")
                return None

    except httpx.HTTPStatusError as e:
        logging.exception(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –æ—Ç OpenRouter: –°—Ç–∞—Ç—É—Å {e.response.status_code}")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            error_details = e.response.json()
            logging.error(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –æ—Ç OpenRouter: {error_details}")
        except Exception:
            logging.error(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ: {e.response.text}")
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º rate limit
        if e.response.status_code == 429:
            logging.warning("‚è≥ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ OpenRouter (429). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return None # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None –ø—Ä–∏ –ª—é–±–æ–π HTTP –æ—à–∏–±–∫–µ
    except httpx.TimeoutException as e:
         logging.error(f"‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenRouter: {e}")
         return None
    except Exception as e:
        logging.exception(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenRouter: {e}")
        return None

# --- END OF FILE api_clients/openrouter.py ---
