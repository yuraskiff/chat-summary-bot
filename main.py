import os
import logging
import asyncio

from aiogram import Bot, Dispatcher
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
from aiohttp import web

from bot.handlers.user_handlers import router as user_router
from bot.handlers.chat_handlers import router as chat_router
from bot.handlers.admin_handlers import router as admin_router, setup_scheduler
from bot.middleware.auth_middleware import AuthMiddleware
from config.config import BOT_TOKEN, WEBHOOK_URL
from db.db import init_pool, close_pool

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)
logging.getLogger("aiogram.client.session").setLevel(logging.ERROR)

# --- –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ---
bot = Bot(BOT_TOKEN, parse_mode="HTML")
dp  = Dispatcher()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware –∏ —Ä–æ—É—Ç–µ—Ä—ã
dp.message.middleware(AuthMiddleware())
dp.include_router(user_router)
dp.include_router(chat_router)
dp.include_router(admin_router)

# --- aiohttp-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è webhook ---
app = web.Application()

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è Telegram: /webhook/{BOT_TOKEN}
SimpleRequestHandler(dispatcher=dp, bot=bot).register(
    app, path=f"/webhook/{BOT_TOKEN}"
)

# --- –§—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ä—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ---
async def on_startup(app: web.Application):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É–ª –ë–î –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ—Å–≤–æ–¥–æ–∫
    await init_pool()
    setup_scheduler(dp)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –≤ Telegram
    await bot.set_webhook(WEBHOOK_URL)
    logging.info("üöÄ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: %s", WEBHOOK_URL)

async def on_shutdown(app: web.Application):
    # –£–¥–∞–ª—è–µ–º webhook
    await bot.delete_webhook()
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, –ø—É–ª –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
    sched = dp.get("scheduler")
    if sched:
        sched.shutdown()
    await close_pool()
    try:
        await bot.session.close()
    except AttributeError:
        session = await bot.get_session()
        await session.close()
    logging.info("üõë –®–∞—Ç–¥–∞—É–Ω –∑–∞–≤–µ—Ä—à—ë–Ω")

# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–∞–ø/—à–∞—Ç–¥–∞—É–Ω
app.on_startup.append(on_startup)
app.on_cleanup.append(on_shutdown)

# --- –ó–∞–ø—É—Å–∫ aiohttp-—Å–µ—Ä–≤–µ—Ä–∞ ---
if __name__ == "__main__":
    port = int(os.getenv("PORT", 8000))
    host = "0.0.0.0"
    logging.info("–ó–∞–ø—É—Å–∫ aiohttp –Ω–∞ %s:%d ‚Ä¶", host, port)
    web.run_app(app, host=host, port=port)
