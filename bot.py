from aiogram import Router, F
from aiogram.types import Message
from aiolimiter import AsyncLimiter
from openrouter import get_summary_from_openrouter

router = Router()

# üõ°Ô∏è Telegram flood control limiter
limiter = AsyncLimiter(max_rate=1, time_period=2)

@router.message(F.text)
async def handle_message(message: Message):
    try:
        # üí¨ –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ LLM
        messages = [
            {
                "role": "system",
                "content": "–¢—ã –≤–µ—Å–µ–ª—ã–π AI, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ –∑–∞–±–∞–≤–Ω—ã–µ —Å–∞–º–º–∞—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞. –ë—É–¥—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º, –∏–Ω–æ–≥–¥–∞ —à—É—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏!"
            },
            {
                "role": "user",
                "content": message.text
            }
        ]

        summary = await get_summary_from_openrouter(messages)

        async with limiter:
            await message.reply(summary)

    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)
        await message.reply("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü§ñüí•")
